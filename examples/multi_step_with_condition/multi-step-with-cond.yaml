apiVersion: argoproj.io/v1alpha1

kind: Workflow

metadata:
  generateName: scargo-multi-step-with-cond-

spec:
  entrypoint: main
  volumes:
  - name: workdir
    emptyDir: {}
  arguments:
    parameters:
    - name: input-val
    - name: input-type
    - name: s3-bucket
    - name: output-path
  templates:
  - name: main
    steps:
    - - name: add-alpha
        template: add-alpha-template
        arguments:
          parameters:
          - name: init-value
            value: '{{workflow.parameters.input-val}}'
        when: '{{workflow.parameters.input-type}} == alpha'
      - name: add-beta
        template: add-beta-template
        arguments:
          parameters:
          - name: init-value
            value: '{{workflow.parameters.input-val}}'
        when: '{{workflow.parameters.input-type}} == beta'
  - name: add-alpha-template
    inputs:
      parameters:
      - name: init-value
    outputs: {}
    initContainers:
    - name: mkdir
      image: alpine:latest
      command:
      - mkdir
      - -p
      - /workdir/out
      mirrorVolumeMounts: true
    - name: chmod
      image: alpine:latest
      command:
      - chmod
      - -R
      - a+rwX
      - /workdir
      mirrorVolumeMounts: true
    script:
      image: proteinqure/scargo
      command:
      - python
      source: |
        result = str('{{inputs.parameters.init-value}}') + 'a'
        with open(
            '{{outputs.artifacts.txt-out.path}}/add_alpha_{{inputs.parameters.init-value}}.txt'
            , 'w+') as fi:
            fi.write(result)
      resources:
        requests:
          memory: 30Mi
          cpu: 20m
        limits:
          memory: 30Mi
          cpu: 20m
      volumeMounts:
      - name: workdir
        mountPath: /workdir
  - name: add-beta-template
    inputs:
      parameters:
      - name: init-value
    outputs: {}
    initContainers:
    - name: mkdir
      image: alpine:latest
      command:
      - mkdir
      - -p
      - /workdir/out
      mirrorVolumeMounts: true
    - name: chmod
      image: alpine:latest
      command:
      - chmod
      - -R
      - a+rwX
      - /workdir
      mirrorVolumeMounts: true
    script:
      image: proteinqure/scargo
      command:
      - python
      source: |
        result = str('{{inputs.parameters.init-value}}') + 'b'
        with open(
            '{{outputs.artifacts.txt-out.path}}/add_beta_{{inputs.parameters.init-value}}.txt'
            , 'w+') as fi:
            fi.write(result)
      resources:
        requests:
          memory: 30Mi
          cpu: 20m
        limits:
          memory: 30Mi
          cpu: 20m
      volumeMounts:
      - name: workdir
        mountPath: /workdir
