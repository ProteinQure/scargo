apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: scargo-multi-step-
spec:
  volumes:
    - name: workdir
      emptyDir: {}

  arguments:
    parameters:
      - name: input-val
      - name: s3-bucket
      - name: output-path
      - name: optimized

  entrypoint: main

  templates:
    - name: main
      steps:
        - - name: add-alpha-compute
            template: exec-add-alpha
            arguments:
              parameters:
                - name: init-value
                  value: "{{workflow.parameters.input-val}}"
        - - name: add-beta-compute
            template: exec-add-beta
            arguments:
              parameters:
                - name: init-value
                  value: "{{steps.add-alpha-compute.outputs.parameters.out-val}}"

    - name: exec-add-alpha
      inputs:
        parameters:
          - name: init-value
      outputs:
        parameters:
          - name: out-val
            valueFrom:
              path: /workdir/out/add_alpha.txt
      initContainers:
        - name: mkdir
          image: alpine:latest
          command: ["mkdir", "-p", "/workdir/out"]
          mirrorVolumeMounts: true
        - name: chmod
          image: alpine:latest
          command: ["chmod", "-R", "a+rwX", "/workdir"]
          mirrorVolumeMounts: true
      script:
        image: python:alpine
        command: [python]
        source: |
          with open("{{outputs.parameters.out-val.path}}", "w+") as fi:
              fi.write(str({{inputs.parameters.init-value}}) + "a")

        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 30Mi
            cpu: 20m
        volumeMounts:
          - name: workdir
            mountPath: /workdir

    - name: exec-add-beta
      inputs:
        parameters:
          - name: init-value
      outputs:
        artifacts:
          - name: txt-out
            path: /workdir/out
            archive:
              none: {}
            s3:
              endpoint: s3.amazonaws.com
              bucket: "{{workflow.parameters.s3-bucket}}"
              key: "{{workflow.parameters.output-path}}"
      initContainers:
        - name: mkdir
          image: alpine:latest
          command: ["mkdir", "-p", "/workdir/out"]
          mirrorVolumeMounts: true
        - name: chmod
          image: alpine:latest
          command: ["chmod", "-R", "a+rwX", "/workdir"]
          mirrorVolumeMounts: true
      script:
        image: python:alpine
        command: [python]
        source: |
          with open("{{outputs.artifacts.txt-out.path}}/multi_step_add_beta_{{inputs.parameters.init-value}}.txt", "w+") as fi:
              fi.write("{{inputs.parameters.init-value}}" + "b")

        resources:
          requests:
            memory: 30Mi
            cpu: 20m
          limits:
            memory: 30Mi
            cpu: 20m
        volumeMounts:
          - name: workdir
            mountPath: /workdir
